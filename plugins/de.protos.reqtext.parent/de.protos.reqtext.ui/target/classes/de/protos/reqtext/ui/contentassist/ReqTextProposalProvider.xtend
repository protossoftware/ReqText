/*
 * generated by Xtext 2.9.1
 */
package de.protos.reqtext.ui.contentassist

import de.protos.reqtext.converter.CC_StringConveter
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.GrammarUtil
import org.eclipse.xtext.RuleCall
import org.eclipse.xtext.ui.editor.contentassist.ConfigurableCompletionProposal
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.eclipse.xtext.util.Strings

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class ReqTextProposalProvider extends AbstractReqTextProposalProvider {
	override complete_CC_STRING(EObject model, RuleCall ruleCall, ContentAssistContext context,
		ICompletionProposalAcceptor acceptor) {
		var feature = getAssignedFeature(ruleCall)
		if (feature == null)
			feature = 'Text'
		createCCStringProposal(context, acceptor, feature, ruleCall)
	}

	def private String getAssignedFeature(RuleCall call) {
		var ass = GrammarUtil.containingAssignment(call);
		if (ass != null) {
			var result = ass.getFeature();
			if (result.equals(result.toLowerCase()))
				result = Strings.toFirstUpper(result);
			return result;
		}
		return null;
	}

	def protected void createCCStringProposal(ContentAssistContext context, ICompletionProposalAcceptor acceptor,
		String feature, RuleCall ruleCall) {
		var proposalText = if(feature != null) feature else Strings.toFirstUpper(ruleCall.rule.name.toLowerCase)
		proposalText = getValueConverter().toString(proposalText, ruleCall.rule.name).replaceAll(
			CC_StringConveter.NEW_LINE, '')
		var displayText = proposalText
		if (feature != null)
			displayText = displayText + " - String"
		val proposal = createCompletionProposal(proposalText, displayText, null, context)
		if (proposal instanceof ConfigurableCompletionProposal) {
			proposal.setSelectionStart(proposal.getReplacementOffset() + 3)
			proposal.setSelectionLength(proposalText.length() - 6)
			proposal.setAutoInsertable(false)
			proposal.setSimpleLinkedMode(context.getViewer(), proposalText.charAt(0), '\t')

		}
		acceptor.accept(proposal);
	}
	
}
