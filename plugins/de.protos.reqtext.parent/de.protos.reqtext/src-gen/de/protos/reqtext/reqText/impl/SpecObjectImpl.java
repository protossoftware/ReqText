/**
 * generated by Xtext 2.9.1
 */
package de.protos.reqtext.reqText.impl;

import de.protos.reqtext.reqText.Image;
import de.protos.reqtext.reqText.ReqTextPackage;
import de.protos.reqtext.reqText.SpecObject;
import de.protos.reqtext.reqText.State;
import de.protos.reqtext.reqText.Version;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Spec Object</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.protos.reqtext.reqText.impl.SpecObjectImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.protos.reqtext.reqText.impl.SpecObjectImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link de.protos.reqtext.reqText.impl.SpecObjectImpl#getState <em>State</em>}</li>
 *   <li>{@link de.protos.reqtext.reqText.impl.SpecObjectImpl#getClass_ <em>Class</em>}</li>
 *   <li>{@link de.protos.reqtext.reqText.impl.SpecObjectImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link de.protos.reqtext.reqText.impl.SpecObjectImpl#getImage <em>Image</em>}</li>
 *   <li>{@link de.protos.reqtext.reqText.impl.SpecObjectImpl#getReference <em>Reference</em>}</li>
 *   <li>{@link de.protos.reqtext.reqText.impl.SpecObjectImpl#getChildren <em>Children</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SpecObjectImpl extends MinimalEObjectImpl.Container implements SpecObject
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getState() <em>State</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getState()
   * @generated
   * @ordered
   */
  protected State state;

  /**
   * The cached value of the '{@link #getClass_() <em>Class</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClass_()
   * @generated
   * @ordered
   */
  protected de.protos.reqtext.reqText.Class class_;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected Version version;

  /**
   * The cached value of the '{@link #getImage() <em>Image</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImage()
   * @generated
   * @ordered
   */
  protected Image image;

  /**
   * The cached value of the '{@link #getReference() <em>Reference</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReference()
   * @generated
   * @ordered
   */
  protected SpecObject reference;

  /**
   * The cached value of the '{@link #getChildren() <em>Children</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChildren()
   * @generated
   * @ordered
   */
  protected EList<SpecObject> children;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpecObjectImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReqTextPackage.Literals.SPEC_OBJECT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State getState()
  {
    if (state != null && state.eIsProxy())
    {
      InternalEObject oldState = (InternalEObject)state;
      state = (State)eResolveProxy(oldState);
      if (state != oldState)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ReqTextPackage.SPEC_OBJECT__STATE, oldState, state));
      }
    }
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State basicGetState()
  {
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setState(State newState)
  {
    State oldState = state;
    state = newState;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__STATE, oldState, state));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public de.protos.reqtext.reqText.Class getClass_()
  {
    if (class_ != null && class_.eIsProxy())
    {
      InternalEObject oldClass = (InternalEObject)class_;
      class_ = (de.protos.reqtext.reqText.Class)eResolveProxy(oldClass);
      if (class_ != oldClass)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ReqTextPackage.SPEC_OBJECT__CLASS, oldClass, class_));
      }
    }
    return class_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public de.protos.reqtext.reqText.Class basicGetClass()
  {
    return class_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClass(de.protos.reqtext.reqText.Class newClass)
  {
    de.protos.reqtext.reqText.Class oldClass = class_;
    class_ = newClass;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__CLASS, oldClass, class_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Version getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVersion(Version newVersion, NotificationChain msgs)
  {
    Version oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__VERSION, oldVersion, newVersion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVersion(Version newVersion)
  {
    if (newVersion != version)
    {
      NotificationChain msgs = null;
      if (version != null)
        msgs = ((InternalEObject)version).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReqTextPackage.SPEC_OBJECT__VERSION, null, msgs);
      if (newVersion != null)
        msgs = ((InternalEObject)newVersion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReqTextPackage.SPEC_OBJECT__VERSION, null, msgs);
      msgs = basicSetVersion(newVersion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__VERSION, newVersion, newVersion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Image getImage()
  {
    return image;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImage(Image newImage, NotificationChain msgs)
  {
    Image oldImage = image;
    image = newImage;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__IMAGE, oldImage, newImage);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImage(Image newImage)
  {
    if (newImage != image)
    {
      NotificationChain msgs = null;
      if (image != null)
        msgs = ((InternalEObject)image).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReqTextPackage.SPEC_OBJECT__IMAGE, null, msgs);
      if (newImage != null)
        msgs = ((InternalEObject)newImage).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReqTextPackage.SPEC_OBJECT__IMAGE, null, msgs);
      msgs = basicSetImage(newImage, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__IMAGE, newImage, newImage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SpecObject getReference()
  {
    if (reference != null && reference.eIsProxy())
    {
      InternalEObject oldReference = (InternalEObject)reference;
      reference = (SpecObject)eResolveProxy(oldReference);
      if (reference != oldReference)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ReqTextPackage.SPEC_OBJECT__REFERENCE, oldReference, reference));
      }
    }
    return reference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SpecObject basicGetReference()
  {
    return reference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReference(SpecObject newReference)
  {
    SpecObject oldReference = reference;
    reference = newReference;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReqTextPackage.SPEC_OBJECT__REFERENCE, oldReference, reference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<SpecObject> getChildren()
  {
    if (children == null)
    {
      children = new EObjectContainmentEList<SpecObject>(SpecObject.class, this, ReqTextPackage.SPEC_OBJECT__CHILDREN);
    }
    return children;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ReqTextPackage.SPEC_OBJECT__VERSION:
        return basicSetVersion(null, msgs);
      case ReqTextPackage.SPEC_OBJECT__IMAGE:
        return basicSetImage(null, msgs);
      case ReqTextPackage.SPEC_OBJECT__CHILDREN:
        return ((InternalEList<?>)getChildren()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReqTextPackage.SPEC_OBJECT__NAME:
        return getName();
      case ReqTextPackage.SPEC_OBJECT__DESCRIPTION:
        return getDescription();
      case ReqTextPackage.SPEC_OBJECT__STATE:
        if (resolve) return getState();
        return basicGetState();
      case ReqTextPackage.SPEC_OBJECT__CLASS:
        if (resolve) return getClass_();
        return basicGetClass();
      case ReqTextPackage.SPEC_OBJECT__VERSION:
        return getVersion();
      case ReqTextPackage.SPEC_OBJECT__IMAGE:
        return getImage();
      case ReqTextPackage.SPEC_OBJECT__REFERENCE:
        if (resolve) return getReference();
        return basicGetReference();
      case ReqTextPackage.SPEC_OBJECT__CHILDREN:
        return getChildren();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReqTextPackage.SPEC_OBJECT__NAME:
        setName((String)newValue);
        return;
      case ReqTextPackage.SPEC_OBJECT__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case ReqTextPackage.SPEC_OBJECT__STATE:
        setState((State)newValue);
        return;
      case ReqTextPackage.SPEC_OBJECT__CLASS:
        setClass((de.protos.reqtext.reqText.Class)newValue);
        return;
      case ReqTextPackage.SPEC_OBJECT__VERSION:
        setVersion((Version)newValue);
        return;
      case ReqTextPackage.SPEC_OBJECT__IMAGE:
        setImage((Image)newValue);
        return;
      case ReqTextPackage.SPEC_OBJECT__REFERENCE:
        setReference((SpecObject)newValue);
        return;
      case ReqTextPackage.SPEC_OBJECT__CHILDREN:
        getChildren().clear();
        getChildren().addAll((Collection<? extends SpecObject>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReqTextPackage.SPEC_OBJECT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ReqTextPackage.SPEC_OBJECT__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case ReqTextPackage.SPEC_OBJECT__STATE:
        setState((State)null);
        return;
      case ReqTextPackage.SPEC_OBJECT__CLASS:
        setClass((de.protos.reqtext.reqText.Class)null);
        return;
      case ReqTextPackage.SPEC_OBJECT__VERSION:
        setVersion((Version)null);
        return;
      case ReqTextPackage.SPEC_OBJECT__IMAGE:
        setImage((Image)null);
        return;
      case ReqTextPackage.SPEC_OBJECT__REFERENCE:
        setReference((SpecObject)null);
        return;
      case ReqTextPackage.SPEC_OBJECT__CHILDREN:
        getChildren().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReqTextPackage.SPEC_OBJECT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ReqTextPackage.SPEC_OBJECT__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case ReqTextPackage.SPEC_OBJECT__STATE:
        return state != null;
      case ReqTextPackage.SPEC_OBJECT__CLASS:
        return class_ != null;
      case ReqTextPackage.SPEC_OBJECT__VERSION:
        return version != null;
      case ReqTextPackage.SPEC_OBJECT__IMAGE:
        return image != null;
      case ReqTextPackage.SPEC_OBJECT__REFERENCE:
        return reference != null;
      case ReqTextPackage.SPEC_OBJECT__CHILDREN:
        return children != null && !children.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", description: ");
    result.append(description);
    result.append(')');
    return result.toString();
  }

} //SpecObjectImpl
